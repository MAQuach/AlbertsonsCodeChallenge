{\rtf1\ansi\ansicpg1252\cocoartf2634
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
# Libraries Used\
- Hilt Dependency injection to provide constructor dependency injection to classes in the application\
- Retrofit to provide access to the backend API endpoints\
- Coroutines to run API network requests on background threads\
- AndroidX to provide Lifecycle and LiveData functionality to the app\
- Data binding to bind the inflated layout files to instances running in the application code.\
- Mockito to mock the ViewModel and Repository classes\
\
# Test Cases\
Test cases included:\
\
# Architecture Design\
![Alt text](app/docs/images/mvvm_architecture.png?raw=true "MVVM Architecture") \
\
The main component in the MVVM design pattern are :\
\
View - Informs the ViewModel about the user\'92s actions\
ViewModel - Exposes streams of data relevant to the View\
DataModel - Abstracts the data source. The ViewModel works with the DataModel to get and save the data.}